usage: sshfs [user@]host:[dir] mountpoint [options]

    -h   --help            print help
    -V   --version         print version
    -f                     foreground operation
    -s                     disable multi-threaded operation
    -p PORT                equivalent to '-o port=PORT'
    -C                     equivalent to '-o compression=yes'
    -F ssh_configfile      specifies alternative ssh configuration file
    -1                     equivalent to '-o ssh_protocol=1'
    -o opt,[opt...]        mount options
    -o reconnect           reconnect to server
    -o delay_connect       delay connection to server
    -o sshfs_sync          synchronous writes
    -o no_readahead        synchronous reads (no speculative readahead)
    -o sync_readdir        synchronous readdir
    -d, --debug            print some debugging information (implies -f)
    -v, --verbose          print ssh replies and messages
    -o dir_cache=BOOL      enable caching of directory contents (names,
                           attributes, symlink targets) {yes,no} (default: yes)
    -o dcache_max_size=N   sets the maximum size of the directory cache (default: 10000)
    -o dcache_timeout=N    sets timeout for directory cache in seconds (default: 20)
    -o dcache_{stat,link,dir}_timeout=N
                           sets separate timeout for {attributes, symlinks, names}
    -o dcache_clean_interval=N
                           sets the interval for automatic cleaning of the
                           cache (default: 60)
    -o dcache_min_clean_interval=N
                           sets the interval for forced cleaning of the
                           cache if full (default: 5)
    -o direct_io           enable direct i/o
    -o workaround=LIST     colon separated list of workarounds
             none             no workarounds enabled
             [no]rename       fix renaming to existing file (default: off)
             [no]renamexdev   fix moving across filesystems (default: off)
             [no]truncate     fix truncate for old servers (default: off)
             [no]buflimit     fix buffer fillup bug in server (default: off)
             [no]fstat        always use stat() instead of fstat() (default: off)
             [no]createmode   always pass mode 0 to create (default: off)
    -o idmap=TYPE          user/group ID mapping (default: none)
             none             no translation of the ID space
             user             only translate UID/GID of connecting user
             file             translate UIDs/GIDs contained in uidfile/gidfile
    -o uidfile=FILE        file containing username:remote_uid mappings
    -o gidfile=FILE        file containing groupname:remote_gid mappings
    -o nomap=TYPE          with idmap=file, how to handle missing mappings
             ignore           don't do any re-mapping
             error            return an error (default)
    -o ssh_command=CMD     execute CMD instead of 'ssh'
    -o ssh_protocol=N      ssh protocol to use (default: 2)
    -o sftp_server=SERV    path to sftp server or subsystem (default: sftp)
    -o directport=PORT     directly connect to PORT bypassing ssh
    -o passive             communicate over stdin and stdout bypassing network
    -o disable_hardlink    link(2) will return with errno set to ENOSYS
    -o transform_symlinks  transform absolute symlinks to relative
    -o follow_symlinks     follow symlinks on the server
    -o no_check_root       don't check for existence of 'dir' on server
    -o password_stdin      read password from stdin (only for pam_mount!)
    -o max_conns=N         open parallel SSH connections
    -o SSHOPT=VAL          ssh options (see man ssh_config)

FUSE Options:
    -o kernel_cache        cache files in kernel
    -o [no]auto_cache      enable caching based on modification times (off)
    -o no_rofd_flush       disable flushing of read-only fd on close (off)
    -o umask=M             set file permissions (octal)
    -o uid=N               set file owner
    -o gid=N               set file group
    -o entry_timeout=T     cache timeout for names (1.0s)
    -o negative_timeout=T  cache timeout for deleted names (0.0s)
    -o attr_timeout=T      cache timeout for attributes (1.0s)
    -o ac_attr_timeout=T   auto cache timeout for attributes (attr_timeout)
    -o noforget            never forget cached inodes
    -o remember=T          remember cached inodes for T seconds (0s)
    -o modules=M1[:M2...]  names of modules to push onto filesystem stack
    -o allow_other         allow access by all users
    -o allow_root          allow access by root
    -o auto_unmount        auto unmount on process termination

Options for subdir module:
    -o subdir=DIR           prepend this directory to all paths (mandatory)
    -o [no]rellinks         transform absolute symlinks to relative

Options for iconv module:
    -o from_code=CHARSET   original encoding of file names (default: UTF-8)
    -o to_code=CHARSET     new encoding of the file names (default: UTF-8)
==================================================================================
安装：
sudo apt install sshfs
sshfs --version

基本使用：
sshfs [user@]hostname:[remote_directory] local_mount_point [options] 

    [user@]hostname：远程机器的 SSH 用户和主机名。如果省略用户名，系统将使用当前本地用户名。

    [remote_directory]：您想要挂载的远程机器上的目录。 

    local_mount_point：将远程目录挂载到本地目录。

    [options]：用于定制 SSHFS 行为的附加选项。 

例子：
sshfs username@example.com:/var/www ~/remote_mount 

卸载远程目录：
fusermount -u ~/remote_mount

高级 SSHFS 选项：
1，设置权限
默认情况下，使用远程系统的权限挂载远程目录。但是，您可以使用挂载选项修改这些权限： 

允许其他用户：要允许本地系统上的其他用户访问已挂载的目录，请使用 -o allow_other 选项： 
sshfs user@remote:/path/to/remote ~/local_mount -o allow_other 

设置 UID 和 GID：要为已挂载的文件设置特定的用户和组 ID，请使用 uid 和 gid 选项： 
sshfs user@remote:/path/to/remote ~/local_mount -o uid=1000,gid=1000 

2，配置连接选项
SSHFS 允许您微调连接以获得更好的性能或安全性： 

压缩：启用压缩可以潜在地提高慢速连接的性能： 
sshfs user@remote:/path/to/remote ~/local_mount -o compression=yes 

保持活动：为了防止连接超时，请使用 ServerAliveInterval 选项： 
sshfs user@remote:/path/to/remote ~/local_mount -o ServerAliveInterval=15 

缓存：调整缓存行为以获得更好的性能： 
sshfs user@remote:/path/to/remote ~/local_mount -o cache=yes,cache_timeout=115200 

3，使用不同端口的 SSHFS 

如果您的 SSH 服务器在非标准端口上运行，您可以使用 -p 选项指定它： 
sshfs -p 2222 user@remote:/path/to/remote ~/local_mount 

此命令连接到在端口 2222 上运行的 SSH 服务器。 

组合选项 
您可以在单个命令中组合多个选项。例如： 
sshfs user@remote:/path/to/remote ~/local_mount -o allow_other,compression=yes,ServerAliveInterval=15,port=2222 

此命令挂载远程目录，允许其他用户访问它，启用压缩，设置保持活动间隔，并连接到非标准 SSH 端口。

