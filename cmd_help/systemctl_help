实例frpc
touch   /etc/systemd/system/frpc.service
vim /etc/systemd/system/frpc.service
[Unit]
Description=frpc Service
After=network.target

[Service]
ExecStart=/opt/frp/frp_0.51.2_linux_amd64/frpc -c /opt/frp/frp_0.51.2_linux_amd64/frpc.ini
WorkingDirectory=/opt/frp/frp_0.51.2_linux_amd64
Restart=always
RestartSec=3

[Install]
WantedBy=multi-user.target

程序所在目录：
/opt/frp/frp_0.51.2_linux_amd64
├── frpc
├── frpc_full.ini
├── frpc.ini
└── LICENSE

==================================
模板
以下是一个示例的 `systemctl` 服务模板，您可以根据实际需求进行修改和配置：
```
[Unit]
Description=My Service
Documentation=https://example.com/my-service-docs
After=network.target

[Service]
Type=simple
ExecStart=/path/to/my-service-start.sh
ExecStop=/path/to/my-service-stop.sh
Restart=always
RestartSec=3
User=myuser
Group=mygroup
WorkingDirectory=/path/to/my-service-directory
Environment=MY_SERVICE_ENV_VAR=example
EnvironmentFile=/path/to/my-service-env-file

[Install]
WantedBy=multi-user.target
```

这是一个包含三个部分的 `systemctl` 服务模板：

1. `[Unit]` 部分：用于描述服务的基本信息和依赖关系。您可以在 
    `Description` 字段中提供服务的描述信息，
    `Documentation` 字段指定服务的文档链接， 
    `After` 字段指定服务所依赖的其他单元。

2. `[Service]` 部分：用于配置服务的执行方式和行为。
    `Type` 字段中，您可以指定服务的类型，如 `simple`、`forking`、`oneshot` 等。
    `ExecStart` 字段中，您可以指定启动服务时要执行的命令或脚本。类似地，
    `ExecStop` 字段用于指定停止服务时要执行的命令或脚本。
    `Restart` 和 `RestartSec` 字段用于配置服务的重启行为。
    `User` 和 `Group` 字段用于指定服务运行的用户和组。
    `WorkingDirectory` 字段用于指定服务的工作目录。
    `Environment` 和 `EnvironmentFile` 字段用于设置服务的环境变量。

3. `[Install]` 部分：用于指定服务的安装配置。
    `WantedBy` 字段用于指定服务所属的目标（target），通常是 `multi-user.target`。

您可以根据自己的需求修改上述模板，并将其保存为 `.service` 文件，
然后使用 `systemctl` 命令来管理您的自定义服务。请确保在使用之前将模板中的路径、用户、组和其他配置项替换为实际的值。

1.启动nfs服务

systemctl start nfs-server.service

2.设置开机自启动

systemctl enable nfs-server.service

3.停止开机自启动

systemctl disable nfs-server.service

4.查看服务当前状态

systemctl status nfs-server.service

5.重新启动某服务

systemctl restart nfs-server.service

6.查看所有已启动的服务

systemctl list -units --type=service
