
{
    你可以在启动 Screen 会话时，使用 -S 参数给会话起名字。例如，我想启动一个叫 alvin 的 Screen 会话：
    $ screen -S alvin
    当你启动了不止一个 Screen 会话时，这可以用来区分其他 Screen 会话。
    
    但执行需要等待很长时间的任务时。这时，一旦你的网络连接断开了，那么任务就被打断，你就必须要重新开始。
    Screen 会话的分离功能可以解决这个问题。你可以进入 Screen 终端里执行更新命令，然后输入会话分离快捷键 
    $Ctrl+a d 

    这就表示你已经成功从 Screen 会话中分离出来并回到原来的 Shell 会话中了。这时，Screen 会话会继续留在后台执行更新任务。
    而且无论是网络断开连接，还是关闭原来的 Shell 会话，它都不会受到影响。
    当然，如果你来不及按会话分离快捷键网络就断开了，Screen 会话也不会关闭，它一样会继续留在后台执行任务。
    
    如果你想重新连接到已分离的 Screen 会话，以查看进程，只需执行以下命令：
    $ screen -r
    需要注意的是，该命令只适用于当前终端只启动了一个 Screen 会话的情况。


}
{
`tmux` 和 `screen` 是两个不同的终端复用工具，它们的功能类似，但有一些区别。

相似之处：

1. 终端复用：`tmux` 和 `screen` 都允许您在单个终端窗口中创建多个终端会话，并在这些会话之间进行切换。

2. 后台运行：无论是 `tmux` 还是 `screen`，它们都可以在会话分离（detached）后继续在后台运行，即使终端窗口关闭也不会中断会话。

3. 多窗口支持：`tmux` 和 `screen` 都支持在会话中创建多个窗口，您可以在这些窗口之间切换。

区别：

1. 配置和自定义：`tmux` 提供了更丰富的配置选项和自定义功能，可以通过修改 `.tmux.conf` 文件来定制 `tmux` 的行为。而 `screen` 的配置相对较少。

2. 窗格支持：`tmux` 支持在窗口中创建多个可调整大小的窗格，可以在一个窗口中同时显示多个终端会话。`screen` 也支持分割窗口，但窗格的布局和调整相对较简单。

3. 兼容性：`tmux` 是较新的工具，而 `screen` 是较早的工具。在某些系统中，`tmux` 可能没有预装，而 `screen` 可能已经预装或更常见。

综上所述，`tmux` 和 `screen` 在实现终端复用的基本功能上是相似的，但在配置、自定义和窗格支持等方面有一些不同。您可以根据个人偏好选择其中之一来满足您的需求。
},
{
                                                                       Screen key bindings, page 1 of 1.

                                                                       Command key:  ^A   Literal ^A:  a

 break       ^B b        fit         F           lastmsg     ^M m        number      N           redisplay   ^L l        suspend     ^Z z        writebuf    >         
 clear       C           flow        ^F f        license     ,           only        Q           remove      X           time        ^T t        xoff        ^S s      
 colon       :           focus       ^I          lockscreen  ^X x        other       ^A          removebuf   =           title       A           xon         ^Q q      
 copy        ^[ [        hardcopy    h           log         H           pow_break   B           reset       Z           vbell       ^G        
 detach      ^D d        help        ?           login       L           pow_detach  D           screen      ^C c        version     v         
 digraph     ^V          history     { }         meta        a           prev        ^H ^P p ^?  select      '           width       W         
 displays    *           info        i           monitor     M           quit        \           silence     _           windows     ^W w      
 dumptermcap .           kill        K k         next        ^@ ^N sp n  readbuf     <           split       S           wrap        ^R r      

^]   paste .
"    windowlist -b
-    select -
0    select 0
1    select 1
2    select 2
3    select 3
4    select 4
5    select 5
6    select 6
7    select 7
8    select 8
9    select 9
I    login on
O    login off
]    paste .
|    split -v
:kB: focus prev
}