用法: radiff2 [-options] [-A[A]] [-B #] [-g sym] [-m graph_mode][-t %] [file] [file]
  -a [arch]  指定要使用的架构插件（x86、arm 等）
  -A [-A]    加载每个二进制文件后运行 aaa 或 aaaa（参见 -C）
  -b [bits]  指定架构的寄存器大小（16（thumb）、32、64 等）
  -B [baddr] 定义在列出时要添加到偏移量的基地址
  -c [cmd]   在每个 RCore 实例上运行给定命令
  -C         图形化比较代码（列：off-A、匹配率、off-B）（参见 -A）
  -d         使用增量比较
  -D         显示反汇编而不是十六进制对
  -e [k=v]   为所有 RCore 实例设置评估配置变量值
  -f [help]  选择输出格式（详见 '-f help'）
  -g [arg]   [sym] 或 [off1,off2] 范围内函数的图形比较
  -i [help]  比较二进制信息（符号、字符串、类等）
  -j         以 json 格式输出（参见 -f json）
  -l [addr]  指定比较的最终偏移量（长度），格式与 -o 相同
  -m [mode]  选择图形输出模式（aditsjJ）
  -n         变更计数
  -o [addr]  指定比较的初始偏移量，可使用 A:B 格式
  -O         仅使用操作码字节进行代码比较
  -p         使用物理寻址（io.va=false）（仅适用于 radiff2 -AC）
  -q         安静模式（禁用颜色，减少输出）
  -r         以 radare 命令格式输出
  -s         计算编辑距离（不允许替换，Eugene W. Myers O(ND) 差异算法）
  -ss        计算 Levenshtein 编辑距离（允许替换，O(N^2)）
  -S [name]  排序代码差异（名称、名称长度、地址、大小、类型、距离）（仅适用于 -C 或 -g）
  -t [0-100] 设置代码比较的阈值（默认为 70%）
  -T         在线程中分析文件（实验性，快 30%但可能崩溃）
  -x         显示两列十六进制转储比较
  -X         使用 xpatch 格式输出比较结果
  -u         统一输出格式（---+++）
  -U         使用系统 'diff' 工具进行统一输出
  -v         显示版本信息
  -V         详细模式（目前仅适用于 -s）