GitLab Docker 镜像是GitLab 的整体镜像，在单个容器中运行所有必要的服务。

Docker 镜像不包括邮件传输代理 (MTA)。推荐的解决方案是添加在单独容器中运行的 MTA（例如 Postfix 或 Sendmail）。
作为另一种选择，您可以直接在GitLab 容器中安装 MTA，但这会增加维护开销，因为您可能需要在每次升级或重新启动后重新安装 MTA。

设置卷位置

在设置其他所有内容之前，请配置一个新的环境变量 $GITLAB_HOME，指向配置、日志和数据文件所在的目录。
 确保该目录存在并且已授予适当的权限。

对于 Linux 用户，将路径设置为 /srv/gitlab：

export GITLAB_HOME=/srv/gitlab

GITLAB_HOME 环境变量应该附加到您的 shell 的配置文件中，以便它应用于所有未来的终端会话：

    Bash：~/.bash_profile
    ZSH：~/.zshrc 

GitLab 容器使用主机装载的卷来存储持久数据：
本地位置 	容器位置 	使用
$GITLAB_HOME/data 	/var/opt/gitlab 	用于存储应用程序数据。
$GITLAB_HOME/logs 	/var/log/gitlab 	用于存储日志。
$GITLAB_HOME/config 	/etc/gitlab 	用于存储GitLab 配置文件。 


安装
GitLab Docker 镜像可以通过多种方式运行： 
使用 Docker Compose


使用 Docker Compose 安装GitLab

使用 Docker Compose，您可以轻松配置、安装和升级基于 Docker 的GitLab 安装实例：

1，安装 Docker Compose。

2，创建一个 docker-compose.yml 文件：

version: '3.6'
services:
  web:
    image: 'registry.gitlab.cn/omnibus/gitlab-jh:latest'
    restart: always
    hostname: 'gitlab.example.com'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://gitlab.example.com'
        # Add any other gitlab.rb configuration here, each on its own line
    ports:
      - '80:80'
      - '443:443'
      - '22:22'
    volumes:
      - '$GITLAB_HOME/config:/etc/gitlab'
      - '$GITLAB_HOME/logs:/var/log/gitlab'
      - '$GITLAB_HOME/data:/var/opt/gitlab'
    shm_size: '256m'


3，确保您在与 docker-compose.yml 相同的目录下并启动GitLab：

docker compose up -d


下面是另一个 docker-compose.yml 示例，其中GitLab 在自定义 HTTP 和 SSH 端口上运行。
注意 GITLAB_OMNIBUS_CONFIG 变量如何匹配 ports 部分：

version: '3.6'
services:
  web:
    image: 'registry.gitlab.cn/omnibus/gitlab-jh:latest'
    restart: always
    hostname: 'gitlab.example.com'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.example.com:8929'
        gitlab_rails['gitlab_shell_ssh_port'] = 2224
    ports:
      - '8929:8929'
      - '2224:22'
    volumes:
      - '$GITLAB_HOME/config:/etc/gitlab'
      - '$GITLAB_HOME/logs:/var/log/gitlab'
      - '$GITLAB_HOME/data:/var/opt/gitlab'
    shm_size: '256m'

这与使用 --publish 8929:8929 --publish 2224:22 相同。


配置

容器使用官方的 Omnibus GitLab 包，所以所有的配置都在唯一的配置文件 /etc/gitlab/gitlab.rb 中完成。

要访问极狐GitLab 配置文件，您可以在正在运行的容器的上下文中启动 shell 会话。这将允许您浏览所有目录并使用您喜欢的文本编辑器：

sudo docker exec -it gitlab /bin/bash

您也可以只编辑/etc/gitlab/gitlab.rb：

sudo docker exec -it gitlab editor /etc/gitlab/gitlab.rb

打开 /etc/gitlab/gitlab.rb 后，请确保将 external_url 设置为指向有效 URL。

要从极狐GitLab 接收电子邮件，您必须配置 SMTP 设置，因为极狐GitLab Docker 镜像没有安装 SMTP 服务器。您可能还对启用 HTTPS 感兴趣。

完成所需的所有更改后，您需要重新启动容器以重新配置极狐GitLab： 
sudo docker restart gitlab

每当容器启动时，极狐GitLab 都会重新配置自身。 有关配置极狐GitLab 的更多选项，请查看配置文档。


使用 Docker compose 升级极狐GitLab

要升级使用 Docker Compose 安装的极狐GitLab：

    进行备份，作为最低要求，备份数据库和极狐GitLab secrets 文件。

    下载最新版本并升级您的极狐GitLab 实例：

    docker compose pull
    docker compose up -d

如果您使用标签代替，则需要先编辑 docker-compose.yml。

