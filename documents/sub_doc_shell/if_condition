
（1）条件控制
if会执行command_test部分的命令，若命令的执行状态未0，则执行then部分；
注意：对if 的条件来说，0为真，非0为假。

格式：
if command_test1
then
    commands1
elif command_test2
then
    commands2
else
    commands3
fi

if-then的高级特性：
特性1：双尖括号 ((  )) 命令允许你将高级数学表达式放入比较中。test 命令只允许在比较中进行简单的算术操作。
格式：(( expression ))
expression可以是任意的数学赋值或比较表达式。
val++  #自增
val--    #自减
++val  #自增
--val    #自减
**         #幂运算
～        #位求反
<<       #左位移
>>       #右位移
&         #按位与
|          #按位或
&&     #逻辑与
||         #逻辑或
！       #逻辑求反

特性2：双方括号 [[  ]]  命令提供了针对字符串比较的高级特性。
test命令只提供标准字符串比较。
格式：[[ expression ]]
expression 中可以使用模式匹配
例如： if [[ $val == r* ]];then

（2）case分支
格式：
case value in
pattern1 | pattern2) 
    commands1
    ;;
pattern3) 
    commands2
    ;;
*) defult 
    commands
    ;;
esac

注：case语句的分句终止符不仅仅可以是 ;; 还可以 ;& 和 ;;&, 他们的作用分别为:
;;   //不再进行后续的匹配，直接跳出case语句
;&   // 不再进行后续的匹配，继续执行后面的case分句
;;&   //继续对后面的case分句进行匹配，若能找到匹配项则执行该分句。
