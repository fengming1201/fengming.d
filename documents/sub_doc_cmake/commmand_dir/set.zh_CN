set
---

将普通变量、缓存变量或环境变量设置为给定值。
参见 :ref:`cmake-language(7) 变量 <CMake Language Variables>`
文档了解普通变量和缓存条目的作用域和交互。

指定 ``<value>...`` 占位符的此命令签名
期望零个或多个参数。多个参数将连接为
:ref:`分号分隔的列表 <CMake Language Lists>` 以形成要设置的实际变量值。
零个参数将导致普通变量被取消设置。
参见 ``unset()`` 命令以显式取消设置变量。

设置普通变量
^^^^^^^^^^^^^^^^^^^

 set(<variable> <value>... [PARENT_SCOPE])

在当前函数或目录作用域中设置给定的 ``<variable>``。

如果给出 ``PARENT_SCOPE`` 选项，变量将在当前作用域之上的作用域中设置。
每个新目录或函数创建一个新作用域。
此命令将变量的值设置到父目录或调用函数中（以适用于当前情况的为准）。
变量值的前一个状态在当前作用域中保持不变
（例如，如果之前未定义，它仍然未定义，如果有值，它仍然是该值）。

设置缓存条目
^^^^^^^^^^^^^^^

 set(<variable> <value>... CACHE <type> <docstring> [FORCE])

设置给定的缓存 ``<variable>``（缓存条目）。
由于缓存条目旨在提供用户可设置的值，因此默认情况下不会覆盖现有缓存条目。
使用 ``FORCE`` 选项覆盖现有条目。

``<type>`` 必须指定为以下之一：

``BOOL``
  布尔值 ``ON/OFF``。``cmake-gui(1)`` 提供复选框。

``FILEPATH``
  磁盘上文件的路径。``cmake-gui(1)`` 提供文件对话框。

``PATH``
  磁盘上目录的路径。``cmake-gui(1)`` 提供文件对话框。

``STRING``
  一行文本。``cmake-gui(1)`` 提供文本字段或
  如果设置了 ``STRINGS`` 缓存条目属性，则提供下拉选择。

``INTERNAL``
  一行文本。``cmake-gui(1)`` 不显示内部条目。
  它们可用于在运行之间持久存储变量。
  使用此类型意味着 ``FORCE``。

``<docstring>`` 必须指定为一行文本，提供
选项的快速摘要，以呈现给 ``cmake-gui(1)`` 用户。

如果缓存条目在调用之前不存在或给出 ``FORCE`` 选项，
则缓存条目将设置为给定值。
此外，当前作用域中的任何普通变量绑定将被移除，
以将新缓存值暴露给任何紧随其后的评估。

在调用之前缓存条目可能已经存在，但如果没有设置类型，
如果它是在 ``cmake(1)`` 命令行上由用户通过 ``-D<var>=<value>`` 选项创建的，
而未指定类型。
在这种情况下，``set`` 命令将添加类型。
此外，如果 ``<type>`` 是 ``PATH`` 或 ``FILEPATH``，
并且在命令行上提供的 ``<value>`` 是相对路径，
则 ``set`` 命令将将路径视为相对于当前工作目录并将其转换为绝对路径。

设置环境变量
^^^^^^^^^^^^^^^^^^^^^^^^

 set(ENV{<variable>} [<value>])

将 ``Environment Variable`` 设置为给定值。
随后对 ``$ENV{<variable>}`` 的调用将返回此新值。

此命令仅影响当前CMake进程，不影响调用CMake的进程，
也不影响整个系统环境，也不影响后续构建或测试进程的环境。

如果在 ``ENV{<variable>}`` 之后未给出参数或 ``<value>`` 是空字符串，
则此命令将清除环境变量的任何现有值。

``<value>`` 之后的参数将被忽略。如果发现额外参数，
则发出作者警告。