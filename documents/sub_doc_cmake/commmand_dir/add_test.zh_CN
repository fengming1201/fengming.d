add_test
--------

向项目添加测试，由 ``ctest(1)`` 运行。

 add_test(NAME <name> COMMAND <command> [<arg>...]
          [CONFIGURATIONS <config>...]
          [WORKING_DIRECTORY <dir>]
          [COMMAND_EXPAND_LISTS])

添加名为 ``<name>`` 的测试。测试名称不得包含空格、引号或其他在 CMake 语法中特殊的字符。选项如下：

``COMMAND``
  指定测试命令行。如果 ``<command>`` 指定可执行目标（由 ``add_executable()`` 创建），
  则将在构建时自动替换为创建的
  可执行文件的位置。

``CONFIGURATIONS``
  仅将测试执行限制为指定的配置。

``WORKING_DIRECTORY``
  将 ``WORKING_DIRECTORY`` 测试属性设置为
  指定执行测试的工作目录。
  如果未指定，测试将在当前工作目录设置为与当前源目录对应的构建目录的情况下运行。

``COMMAND_EXPAND_LISTS``
  ``COMMAND`` 参数中的列表将被展开，包括那些
  用
  生成器表达式创建的列表。

给定的测试命令预期以代码 ``0`` 退出以通过，以非零退出以失败，如果设置了 ``WILL_FAIL`` 测试属性，则反之。
写入 stdout 或 stderr 的任何输出都将由 ``ctest(1)`` 捕获，但除非使用 ``PASS_REGULAR_EXPRESSION``、
``FAIL_REGULAR_EXPRESSION`` 或
``SKIP_REGULAR_EXPRESSION`` 测试属性，否则不会影响通过/失败状态。

``COMMAND`` 和 ``WORKING_DIRECTORY`` 选项可以使用语法为 ``$<...>`` 的"生成器表达式"。
请参阅 ``cmake-generator-expressions(7)`` 手册了解可用表达式。

示例用法：

 add_test(NAME mytest
          COMMAND testDriver --config $<CONFIGURATION>
                             --exe $<TARGET_FILE:myexe>)

这会创建一个测试 ``mytest``，其命令运行 ``testDriver`` 工具，传递配置名称和目标 ``myexe`` 生成的可执行文件的完整路径。

.. 注意::

  仅当已调用 ``enable_testing()`` 命令时，CMake 才会生成测试。除非 ``BUILD_TESTING`` 选项设置为 ``OFF``，否则 ``CTest`` 模块会自动调用该命令。

---------------------------------------------------------------------

 add_test(<name> <command> [<arg>...])

添加名为 ``<name>`` 的测试，给定命令行。与上述 ``NAME`` 签名不同，不对命令行执行任何转换来支持目标名称或生成器表达式。