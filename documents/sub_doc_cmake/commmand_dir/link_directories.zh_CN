link_directories
----------------

添加链接器将查找库的目录。

 link_directories([AFTER|BEFORE] directory1 [directory2 ...])

添加链接器应搜索库的路径。
提供给此命令的相对路径被解释为相对于当前源目录，请参见 ``CMP0015``。

这些目录被添加到当前 ``CMakeLists.txt`` 文件的 ``LINK_DIRECTORIES`` 目录属性中，
根据需要转换相对路径为绝对路径。
该命令仅适用于调用后创建的目标。

默认情况下，指定的目录被追加到当前目录列表的末尾。
此默认行为可以通过设置 ``CMAKE_LINK_DIRECTORIES_BEFORE`` 为 ``ON`` 来改变。
通过显式使用 ``AFTER`` 或 ``BEFORE``，您可以选择追加或前置，独立于默认值。

``link_directories`` 的参数可以使用语法为 "$<...>" 的 "生成器表达式"。
请参见 ``cmake-generator-expressions(7)`` 手册了解可用的表达式。
请参见 ``cmake-buildsystem(7)`` 手册了解更多关于定义构建系统属性的信息。

.. 注意::

  此命令很少需要，在有其他选择的情况下应避免使用。
  尽可能优先传递库的完整绝对路径，因为这确保始终链接正确的库。
  ``find_library()`` 命令提供完整路径，通常可以直接用于 ``target_link_libraries()`` 的调用中。
  可能需要库搜索路径的情况包括：

  - 像Xcode这样的项目生成器，用户可以在构建时切换目标架构，
    但不能使用库的完整路径，因为它只提供一个架构（即它不是通用二进制文件）。
  - 库本身可能具有其他私有库依赖项，这些依赖项期望通过 ``RPATH`` 机制找到，
    但某些链接器无法完全解码这些路径（例如由于存在 ``$ORIGIN`` 等）。

  如果必须提供库搜索路径，尽可能优先使用 ``target_link_directories()`` 命令而不是 ``link_directories()`` 来本地化效果。
  特定于目标的命令还可以控制搜索目录如何传播到其他依赖目标。