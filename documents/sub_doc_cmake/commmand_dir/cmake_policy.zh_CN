cmake_policy
------------

管理 CMake 策略设置。请参阅 ``cmake-policies(7)``
手册了解定义的策略。

随着 CMake 的发展，有时需要更改现有行为
以修复错误或改进现有功能的实现。
CMake 策略机制旨在帮助保持现有项目
在新版本的 CMake 引入行为更改时能够继续构建。每个
新策略（行为更改）都被赋予一个形式为
``CMP<NNNN>`` 的标识符，其中 ``<NNNN>`` 是整数索引。与每个策略关联的文档
描述了 ``OLD`` 和 ``NEW`` 行为以及引入策略的原因。项目可以设置每个策略
以选择所需的行为。当 CMake 需要知道使用哪种行为时，它会检查项目指定的设置。如果没有设置可用，则假定为 ``OLD`` 行为并产生警告，要求设置策略。

按 CMake 版本设置策略
^^^^^^^^^^^^^^^^^^^^^

``cmake_policy`` 命令用于将策略设置为 ``OLD`` 或 ``NEW``
行为。虽然支持单独设置策略，我们
鼓励项目根据 CMake 版本设置策略：

 cmake_policy(VERSION <min>[...<max>])

``<min>`` 和可选的 ``<max>`` 都是形式为
``major.minor[.patch[.tweak]]`` 的 CMake 版本，``...`` 是字面量。``<min>``
版本必须至少为 ``2.4`` 且最多为运行版本的 CMake。
如果指定了 ``<max>`` 版本，它必须至少为 ``<min>`` 版本
但可能超过运行版本的 CMake。如果运行版本的 CMake
早于 3.12，额外的 ``...`` 点将被视为版本组件分隔符，导致 ``...<max>`` 部分被忽略，并保留基于 ``<min>`` 的策略的 3.12 之前行为。

这指定当前 CMake 代码是为给定的 CMake 版本范围编写的。
所有已知于运行版本的 CMake 且在 ``<min>``（或如果指定了 ``<max>``）版本或更早版本中引入的策略都将设置为使用 ``NEW`` 行为。
所有在后续版本中引入的策略都将取消设置（除非 ``CMAKE_POLICY_DEFAULT_CMP<NNNN>`` 变量设置了默认值）。
这有效地请求给定 CMake 版本的首选行为，并告诉较新的 CMake 版本警告它们的新策略。

注意 ``cmake_minimum_required(VERSION)``
命令也隐式调用 ``cmake_policy(VERSION)``。

显式设置策略
^^^^^^^^^^^^^^^

 cmake_policy(SET CMP<NNNN> NEW)
 cmake_policy(SET CMP<NNNN> OLD)

告诉 CMake 对给定策略使用 ``OLD`` 或 ``NEW`` 行为。
依赖给定策略的旧行为的项目可以通过将策略状态设置为 ``OLD`` 来消除策略警告。或者，可以修复项目以使用新行为并将策略状态设置为 ``NEW``。

.. 注意::
  策略的 ``OLD`` 行为按定义是
  ``已弃用``
  并可能在未来的 CMake 版本中移除。

检查策略设置
^^^^^^^^^^^^

 cmake_policy(GET CMP<NNNN> <variable>)

检查给定策略是否设置为 ``OLD`` 或 ``NEW`` 行为。
输出 ``<variable>`` 值将是 ``OLD`` 或 ``NEW``（如果策略已设置），否则为空。

CMake 策略堆栈
^^^^^^^^^^^^^^^^

CMake 将策略设置保存在堆栈上，因此 ``cmake_policy`` 命令所做的更改仅影响堆栈顶部。每个子目录都会自动管理策略堆栈上的新条目，以保护其父目录和兄弟目录。
CMake 还为 ``include()`` 和 ``find_package()`` 命令加载的脚本管理新条目，除非使用 ``NO_POLICY_SCOPE`` 选项调用（另请参阅策略 ``CMP0011``）。
``cmake_policy`` 命令提供管理策略堆栈上自定义条目的接口：

 cmake_policy(PUSH)
 cmake_policy(POP)

每个 ``PUSH`` 必须有一个匹配的 ``POP`` 来擦除任何更改。
这对于对策略设置进行临时更改很有用。对 ``cmake_minimum_required(VERSION)``、
``cmake_policy(VERSION)`` 或 ``cmake_policy(SET)`` 命令的调用
仅影响当前策略堆栈顶部。

由 ``function()`` 和 ``macro()``
命令创建的命令在创建时记录策略设置，
并在调用时使用预先记录的策略。如果函数或宏实现设置了策略，更改将自动传播到调用者，直到达到最近的嵌套策略堆栈条目。