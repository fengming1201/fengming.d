target_compile_definitions
--------------------------

为target添加编译定义。

 target_compile_definitions(<target>
   <INTERFACE|PUBLIC|PRIVATE> [items1...]
   [<INTERFACE|PUBLIC|PRIVATE> [items2...] ...])

指定编译给定``<target>``时要使用的编译定义。
命名的``<target>``必须由诸如``add_executable()``或``add_library()``之类的命令创建，
且不能是:ref:`ALIAS target <Alias Targets>`。

需要``INTERFACE``、``PUBLIC``和``PRIVATE``关键字来指定后续参数的作用域。
``PRIVATE``和``PUBLIC``项将填充``<target>``的``COMPILE_DEFINITIONS``属性。
``PUBLIC``和``INTERFACE``项将填充``<target>``的``INTERFACE_COMPILE_DEFINITIONS``属性。
(:ref:`IMPORTED targets <Imported Targets>`仅支持``INTERFACE``项。)
后续参数指定编译定义。对同一``<target>``的重复调用将按调用顺序追加项。

``target_compile_definitions``的参数可以使用语法为``$<...>``的"生成器表达式"。
有关可用表达式，请参见``cmake-generator-expressions(7)``手册。
有关定义构建系统属性的更多信息，请参见``cmake-buildsystem(7)``手册。

任何项前导的``-D``将被移除。空项将被忽略。
例如，以下所有内容都是等效的：

 target_compile_definitions(foo PUBLIC FOO)
 target_compile_definitions(foo PUBLIC -DFOO)  # -D removed
 target_compile_definitions(foo PUBLIC "" FOO) # "" ignored
 target_compile_definitions(foo PUBLIC -D FOO) # -D becomes "", then ignored