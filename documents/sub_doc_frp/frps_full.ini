# cat frps_full.ini 
# [common] 是整体部分
[common]
# IPv6 的文字地址或主机名必须括在方括号中，如“[：：1]：80”、“[ipv6-host]：http”或“[ipv6-host%zone]：80”
# 对于单个“bind_addr”字段，不需要方括号，例如“bind_addr = ：：”。
bind_addr = 0.0.0.0
bind_port = 7000

# UDP端口用于KCP协议，它可以与“bind_port”相同。
# 如果未设置，则在 FRPS 中禁用 KCP。
kcp_bind_port = 7000

# 用于 QUIC 协议的 UDP 端口。
# 如果未设置，则在 FRPS 中禁用 QUIC。
# quic_bind_port = 7002
# QUIC 协议选项
# quic_keepalive_period = 10
# quic_max_idle_timeout = 30
# quic_max_incoming_streams = 100000

# 指定代理将侦听的地址，默认值与bind_addr相同
# proxy_bind_addr = 127.0.0.1

# 如果要支持虚拟主机，则必须设置用于侦听的HTTP端口（可选）
# 注意：http 端口和 https 端口可以与 bind_port 相同
vhost_http_port = 80
vhost_https_port = 443

# 虚拟主机 HTTP 服务器的响应标头超时（秒），默认值为 60s
# vhost_http_timeout = 60

# tcpmux_httpconnect_port指定服务器侦听 TCP 的端口
# HTTP CONNECT 请求。如果值为 0，则服务器不会多路复用 TCP
# 单个端口上的请求。如果不是 - 它将侦听 HTTP CONNECT 请求的此值。默认情况下，此值为 0。
# tcpmux_httpconnect_port = 1337

# 如果tcpmux_passthrough为真，frps 不会对流量进行任何更新。
# tcpmux_passthrough = false

# 设置dashboard_addr和dashboard_port以查看玻璃钢仪表板
# dashboard_addr的默认值与bind_addr相同
# 仪表板仅在设置dashboard_port时可用
dashboard_addr = 0.0.0.0
dashboard_port = 7500

# 用于基本身份验证保护的仪表板用户和密码
dashboard_user = admin
dashboard_pwd = admin

# 仪表板 TLS 模式
dashboard_tls_mode = false
# dashboard_tls_cert_file = server.crt
# dashboard_tls_key_file = server.key

# enable_prometheus将在 /metrics API 中的 {dashboard_addr}：{dashboard_port} 上导出 Prometheus 指标。
enable_prometheus = true

# 仪表板资产目录（仅适用于调试模式）
# assets_dir = ./static

# 控制台或实际日志文件路径，如 ./frps.log
log_file = ./frps.log

# 跟踪、调试、信息、警告、错误
log_level = info

log_max_days = 3

# log_file为控制台时禁用日志颜色，默认值为 false
disable_log_color = false

# DetailedErrorsToClient 定义是否将特定错误（带有调试信息）发送到 frpc。默认情况下，此值为 true。
detailed_errors_to_client = true

# authentication_method指定使用哪种身份验证方法对 FRPC 进行 FRP 身份验证。
# 如果指定了“令牌” - 令牌将被读入登录消息。
# 如果指定了“oidc” - 将使用 OIDC 设置颁发 OIDC（开放 ID 连接）令牌。默认情况下，此值为“令牌”。
authentication_method = token

# authenticate_heartbeats指定是否在发送到 FRPS 的检测信号中包含身份验证令牌。默认情况下，此值为 false。
authenticate_heartbeats = false

# AuthenticateNewWorkConns 指定是否在发送到 frps 的新工作连接中包含身份验证令牌。默认情况下，此值为 false。
authenticate_new_work_conns = false

# 身份验证令牌
token = 12345678

# oidc_issuer指定用于验证 OIDC 令牌的颁发者。
# 默认情况下，此值为 “”。
oidc_issuer =

# oidc_audience指定 OIDC 令牌在验证时应包含的受众。
# 默认情况下，此值为 “”。
oidc_audience =

# oidc_skip_expiry_check指定是否跳过检查 OIDC 令牌是否已过期。
# 默认情况下，此值为 false。
oidc_skip_expiry_check = false

# oidc_skip_issuer_check指定是否跳过检查 OIDC 令牌的颁发者声明是否与 OidcIssuer 中指定的颁发者匹配。
# 默认情况下，此值为 false。
oidc_skip_issuer_check = false

# 心跳配置，不建议修改默认值，heartbeat_timeout的默认值为 90。设置负值以禁用它。
# heartbeat_timeout = 90

# user_conn_timeout配置，不建议修改默认值 user_conn_timeout 的默认值为 10
# user_conn_timeout = 10

# 只允许FRPC绑定你列出的端口，如果你什么都不设置，就没有任何限制
allow_ports = 2000-3000,3001,3003,4000-50000

# 如果每个代理中的pool_count超过最大值，它们将更改为max_pool_count
max_pool_count = 5

# 每个客户端可以使用最大端口数，默认值为 0 表示无限制
max_ports_per_client = 0

# tls_only指定是否仅接受 TLS 加密的连接。默认情况下，该值为 false。
tls_only = false

# tls_cert_file = server.crt
# tls_key_file = server.key
# tls_trusted_ca_file = ca.crt

# 如果subdomain_host不为空，则可以在类型为 http 时设置子域，或者在 frpc 的配置文件中设置子域，当子域被测试时，路由使用的主机 test.frps.com
subdomain_host = frps.com

# 如果使用 TCP 流多路复用，则默认值为 true
# tcp_mux = true

# 指定 TCP 多路复用的保持活动间隔。
# 仅当tcp_mux为真时才有效。
# tcp_mux_keepalive_interval = 60

# tcp_keepalive指定 FRPC 和 FRPS 之间活动网络连接的保持活动状态探测器之间的间隔。
# 如果为负，则禁用保持活动状态探测器。
# tcp_keepalive = 7200

# HTTP 请求的自定义 404 页面
# custom_404_page = /path/to/404.html

# 指定 UDP 数据包大小，单位为字节。如果未设置，则默认值为 1500。
# 客户端和服务器之间的此参数应相同。
# 它会影响 udp 和 sudp 代理。
udp_packet_size = 1500

# 在仪表板侦听器中启用 golang pprof 处理程序。
# 必须先设置仪表板端口
pprof_enable = false

# NAT 打孔策略数据的保留时间。
nat_hole_analysis_data_reserve_hours = 168

[plugin.user-manager]
addr = 127.0.0.1:9000
path = /handler
ops = Login

[plugin.port-manager]
addr = 127.0.0.1:9001
path = /handler
ops = NewProxy
