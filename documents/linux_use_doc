
{
    将内容发送到另一个终端窗口显示

    程序员在他们的计算机上使用多个物理屏幕来同时进行多项开发活动。一些程序员在这些屏幕上打开多个终端窗口。
    同时，一些程序员通常在同一个物理屏幕上使用多个终端窗口。如果我们需要将特定命令的输出发送到另一个现有的终端窗口怎么办？
    原理：
    每个GUI终端程序实例都连接到一个称为伪终端文件的设备文件。这些伪终端文件帮助GUI终端从子进程发送和捕获I/O数据。
    打开终端窗口并输入以下命令以查看所有可用的伪终端设备：

    已经打开了8个终端，如下：
    # ls /dev/pts/
    0  1  2  3  4  5  6  7  ptmx

    当前终端使用/dev/pts/0文件处理进程的I/O数据——您可以使用tty命令来查看当前的伪终端号。
    # tty
    /dev/pts/7

    使用这个实验概念，现在您可以将命令输出直接发送到另一个现有终端窗口，反之亦然，如下所示。
    #echo "hello world"  > /dev/pts/0
    向0号终端发送“hello world” 
    结合tee命令，即可以在本地显示，又可以发送到其他终端。
},
{
    linux下神奇的script命令-录屏
    script 是一个神奇命令，script 能够将终端的会话过程录制下来，然后使用 scriptreplay 就可以将其录制的结果播放给他人观看。
    script 的好处就在于你在终端中的所有操作、敲过的命令和打印出的结果它都可以原原本本地进行录制。可以应用于教学、演示、审计。 
    一般来说，script 和 scriptreplay 在 Linux 发行版中都有默认安装。 
    #script -t 2>demo.time -a demo.his  //开始录像，ctrl+d或者exit结束 
    #scriptreplay demo.time demo.his    //回放 
    
    两个配置文件被当做script命令的参数。这两个文件可以随便命名，这里用demo.time和demo.his。
    其中
    demo.time用于存储时序信息，描述每一个指令在何时运行；
    demo.his用于存储命令信息输出。
    -t 选项用于将时序数据导入stderr。
    2>用于stderr重定向到demo.time。 
    参数:
    -t 指明输出录制的时间数据 
    -f 如果需要在输出到日志文件的同时，也可以查看日志文件的内容，可以使用 -f 参数。
    PS:可以用于教学,两个命令行接-f可以实时演示 
    -a 输出录制的文件，在现有内容上追加新的内容 
    -q  可以使script命令以静默模式运行  利用script记录某人行为 

},
{
使用reptyr在screen中接管执行中进程
    当你开启了一个占用很长时间的进程，比如wget一个大文件，但是没有在screen等这种环境里打开，
    又不想占着一个窗口一直等待或者担心ssh中断导致进程退出，就可以使用reptyr了，使用方法也很简单，
    开启一个screen，在screen中执行

    reptyr 进程pid    //即可完成接管，原来所在的终端程序变成后台，还可以重新接管回去。
},
{
    如何恢复nohup会话（session）
        


},
{
    linux mkfs.ntfs 格式化慢
    原因是格式化过程除了写入分区表外，还要遍历每个卷，清零和坏扇区检查。
    解决办法：
    mkfs.ntfs -f  /dev/sdXX
    -f、–-fast或 –q、–-quick 执行快速格式化。这将跳过卷清零和坏扇区检查。
    –L、–-label	设置文件系统的卷标签。
    –n、–-no-action	mkntfs不实际创建文件系统，但显示它创建文件系统时将执行的工作。
    -c	以字节为单位指定簇的大小。
    –p、–-partition	指定分区开始扇区
    -f/--force	强制执行mkntfs
},
{
    cp 命令添加进度条
    如何使用 Github 上的开源项目 advcpmv 来实现 Linux 中的 「cp」 和 「mv」 命令的进度条。
    由于 cp 和 mv 命令都是属于 coreutils 工具包下的，因此我们的主要操作就是在编译 coreutils的时候加入补丁从而实现进度条功能。
    注意：尽量不要使用root 用户操作。

    可以查看作者的安装脚本：curl -LO https://raw.githubusercontent.com/jarun/advcpmv/master/install.sh
    用作者的脚本安装：install.sh  0.8 8.30
    
    我改造作者的安装脚本myinstall.sh在：fengming.d/linux_tools/advcpmv.tar.gz
    自己手动下载安装步骤如下：
    step1:下载coreutils，下载对应的版本
        http://ftp.gnu.org/gnu/coreutils/coreutils-8.30.tar.xz
        http://ftp.gnu.org/gnu/coreutils/coreutils-8.32.tar.xz
        http://ftp.gnu.org/gnu/coreutils/coreutils-9.0.tar.xz
        http://ftp.gnu.org/gnu/coreutils/coreutils-9.1.tar.xz
        如：
        curl -LO http://ftp.gnu.org/gnu/coreutils/coreutils-8.30.tar.xz
        解压:
        tar -xJf coreutils-8.30.tar.xz

    step2:下载 github 上的补丁
        https://raw.githubusercontent.com/jarun/advcpmv/master/advcpmv-0.8-8.30.patch
        https://raw.githubusercontent.com/jarun/advcpmv/master/advcpmv-0.8-8.32.patch
        https://raw.githubusercontent.com/jarun/advcpmv/master/advcpmv-0.8-9.0.patch
        https://raw.githubusercontent.com/jarun/advcpmv/master/advcpmv-0.8-9.1.patch

        如：
        curl -LO https://raw.githubusercontent.com/jarun/advcpmv/master/advcpmv-0.8-8.30.patch
    
    step3:打补丁
        cd coreutils-8.30
        patch -p1 -i ../advcpmv-0.8-8.30.patch

    stept4:配置和编译
        ./configure
        make
    step5:安装 
        将编译生成的src/cp 和 src/mv 放置在/usr/local/bin/目录中。
        不要删除或复制系统原来的命令，只要PATH中/usr/local/bin在/bin/前面即可，在/usr/local/bin找到cp或mv后就不去/bin目录中寻找了。

    附件：
    当下载补丁时，https://raw.githubusercontent.com URL有可能访问不了，是因为域名解析的问题，可以用网页查看该域名对应的IP，（域名查看：https://www.ip138.com/）
    然后直接修改/etc/hosts文件即可。
}

