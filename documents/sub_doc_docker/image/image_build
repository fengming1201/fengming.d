Start a build

Usage:  docker buildx build [OPTIONS] PATH | URL | -

Start a build

Aliases:
  docker build, docker builder build, docker image build, docker buildx b

Options:
      --add-host strings              Add a custom host-to-IP mapping (format: "host:ip")
      --allow strings                 Allow extra privileged entitlement (e.g., "network.host", "security.insecure")
      --annotation stringArray        Add annotation to the image
      --attest stringArray            Attestation parameters (format: "type=sbom,generator=image")
      --build-arg stringArray         Set build-time variables
      --build-context stringArray     Additional build contexts (e.g., name=path)
      --builder string                Override the configured builder instance (default "default")
      --cache-from stringArray        External cache sources (e.g., "user/app:cache", "type=local,src=path/to/dir")
      --cache-to stringArray          Cache export destinations (e.g., "user/app:cache", "type=local,dest=path/to/dir")
      --call string                   Set method for evaluating build ("check", "outline", "targets") (default "build")
      --cgroup-parent string          Set the parent cgroup for the "RUN" instructions during build
      --check                         Shorthand for "--call=check" (default )
  -D, --debug                         Enable debug logging
  -f, --file string                   Name of the Dockerfile (default: "PATH/Dockerfile")
      --iidfile string                Write the image ID to a file
      --label stringArray             Set metadata for an image
      --load                          Shorthand for "--output=type=docker"
      --metadata-file string          Write build result metadata to a file
      --network string                Set the networking mode for the "RUN" instructions during build (default "default")
      --no-cache                      Do not use cache when building the image
      --no-cache-filter stringArray   Do not cache specified stages
  -o, --output stringArray            Output destination (format: "type=local,dest=path")
      --platform stringArray          Set target platform for build
      --progress string               Set type of progress output ("auto", "plain", "tty", "rawjson"). Use plain to show container output
                                      (default "auto")
      --provenance string             Shorthand for "--attest=type=provenance"
      --pull                          Always attempt to pull all referenced images
      --push                          Shorthand for "--output=type=registry"
  -q, --quiet                         Suppress the build output and print image ID on success
      --sbom string                   Shorthand for "--attest=type=sbom"
      --secret stringArray            Secret to expose to the build (format: "id=mysecret[,src=/local/secret]")
      --shm-size bytes                Shared memory size for build containers
      --ssh stringArray               SSH agent socket or keys to expose to the build (format: "default|<id>[=<socket>|<key>[,<key>]]")
  -t, --tag stringArray               Name and optionally a tag (format: "name:tag")
      --target string                 Set the target build stage to build
      --ulimit ulimit                 Ulimit options (default [])

Experimental commands and flags are hidden. Set BUILDX_EXPERIMENTAL=1 to show them.
============================================================================
开始构建

别名:
  docker buildx build, docker buildx b

选项:
      --add-host strings              添加自定义主机到 IP 映射（格式： "host:ip")
      --allow strings                 允许额外的特权权利（例如，"network.host", "security.insecure")
      --annotation stringArray        Add annotation to the image
      --attest stringArray            证明参数（格式："type=sbom,generator=image")
      --build-arg stringArray         设置构建时变量
      --build-context stringArray     其他构建上下文（例如，name=path)
      --builder string                覆盖配置的构建器实例（默认 "default")
      --cache-from stringArray        外部缓存源（例如， "user/app:cache", "type=local,src=path/to/dir")
      --cache-to stringArray          缓存导出目标（例如， "user/app:cache", "type=local,dest=path/to/dir")
      --call string                   Set method for evaluating build ("check", "outline", "targets") (default "build")
      --cgroup-parent string          Optional parent cgroup for the container
      --check                         Shorthand for "--call=check" (default )
  -D, --debug                         Enable debug logging      
  -f, --file string                   指定Dockerfile（默认： "PATH/Dockerfile")
      --iidfile string                Write the image ID to a file
      --label stringArray             设置图像的元数据
      --load                          Shorthand for "--output=type=docker"
      --metadata-file string          Write build result metadata to a file
      --network string                在构建期间设置“RUN”指令的网络模式（默认 "default")
      --no-cache                      构建映像时不使用缓存
      --no-cache-filter stringArray   不缓存指定的阶段
  -o, --output stringArray            输出目标（格式： "type=local,dest=path")
      --platform stringArray          设置构建的目标平台
      --progress string               设置进度输出的类型 ("auto", "plain", "tty"). 使用普通显示容器输出（默认 "auto")
      --provenance string             Shorthand for "--attest=type=provenance"
      --pull                          始终尝试拉取所有引用的图像
      --push                          Shorthand for "--output=type=registry"
  -q, --quiet                         禁止生成输出并在成功时打印映像 ID
      --sbom string                   Shorthand for "--attest=type=sbom"
      --secret stringArray            要向生成公开的机密（格式： "id=mysecret[,src=/local/secret]")
      --shm-size bytes                Shared memory size for build containers
      --ssh stringArray               要向生成公开的 SSH 代理套接字或密钥（格式： "default|<id>[=<socket>|<key>[,<key>]]")
  -t, --tag stringArray               名称和可选的标记（格式： "name:tag")
      --target string                 设置要构建的目标构建阶段
      --ulimit ulimit                Ulimit 选项（默认 [])

============================================================================
关联：Dockerfile syntax
关键字：
重要简述：
创建镜像的方法主要有三种：
1、基于已有镜像的容器创建。（子命令：commit）
2、基于本地模板导入。（子命令：import）
3、基于Dockerfile创建。（子命令：build）

基于Dockerfile创建是最常见的方式。Dockerfile是一个文本文件，利用给定的指令描述基于某个父镜像创建新镜像的过程。
实例：
# docker images                    
REPOSITORY   TAG       IMAGE ID       CREATED          SIZE
ubuntu       18.04     5a214d77f5d7   2 months ago     63.1MB
 
# cat Dockerfile                   
FROM ubuntu:18.04

RUN touch /root/test_dockerfile


# docker build -t "mytest2:1.0.1" .
Sending build context to Docker daemon  2.048kB
Step 1/2 : FROM ubuntu:18.04
 ---> 5a214d77f5d7
Step 2/2 : RUN touch /root/test_dockerfile
 ---> Running in bcce68da2fbd
Removing intermediate container bcce68da2fbd
 ---> a9bb5d5b11f8
Successfully built a9bb5d5b11f8
Successfully tagged mytest2:1.0.1

 
# docker images                    
REPOSITORY   TAG       IMAGE ID       CREATED          SIZE
mytest2      1.0.1     a9bb5d5b11f8   4 seconds ago    63.1MB
ubuntu       18.04     5a214d77f5d7   2 months ago     63.1MB
 

# docker run -it mytest2:1.0.1 bash 
root@81ce2dd0a4d7:/# ls /root/
test_dockerfile
root@81ce2dd0a4d7:/# 
