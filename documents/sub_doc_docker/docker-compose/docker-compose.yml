
Docker Compose语法介绍


docker-compose.yml文件是Docker Compose的核心，用于定义服务、网络和数据卷。
该文件使用YAML格式编写，其默认路径为./docker-compose.yml，可以使用.yml或.yaml作为文件扩展名。
在docker-compose.yml文件中，可以定义多个服务，每个服务可以包含一系列配置选项，例如镜像名称、容器端口、环境变量等。

此外，docker-compose.yml文件还可以定义网络和数据卷，以便在多个容器之间共享网络和数据。
网络可以设置为公共或私有，数据卷可以设置为持久化或非持久化。

docker-compose.yml文件有以下6个顶级元素：
version (可选)
    描述：指定 Compose 文件的版本。这有助于确保 Compose 工具与您的文件格式兼容。
    用途：当工具或库进行更新时，版本号可以帮助确保您的 Compose 文件与新版本的工具或库兼容。
services (必需)
    描述：定义应用程序的各个服务。每个服务是一个独立的 Docker 容器，包含运行应用程序所需的配置信息。
    用途：在 Compose 文件中，您可以为应用程序的不同部分定义多个服务。例如，一个 Web 服务器和一个数据库可以作为两个不同的服务来管理。
networks (可选)
    描述：定义自定义网络，以便容器可以相互通信。
    用途：默认情况下，Compose 会为您的应用创建一个网络，但您也可以定义自己的网络，以便容器可以与外部世界或其他容器通信。
volumes (可选)
    描述：定义数据卷，以便持久化存储数据或共享数据。
    用途：数据卷允许您在容器之间共享和持久化数据。这对于确保数据的一致性和持久性非常有用。
configs (可选)
    描述：定义配置，这些配置可以在服务中使用，但不应该直接在 Compose 文件中硬编码。
    用途：这是一个相对较新的功能，允许您将敏感信息（如密码、API 密钥等）从 Compose 文件中移出，以增加安全性。这些配置可以在运行时注入到服务中。
secrets (可选)
    描述：类似于 Configs，Secrets 也用于定义敏感信息，但它们是专为敏感数据设计的，并具有特定的管理功能。
    用途：Secrets 是专为存储敏感信息而设计的，例如密码、API 密钥等。它们可以与 Configs 结合使用，以提供更完整和安全的解决方案来管理敏感数据。

1、version

version 指定Docker Compose文件的版本。目前最新的版本是3。

2、Services

参考 https://docs.docker.com/compose/compose-file/05-services/

services 定义各个服务。每个服务都有一个唯一的名称，并且需要指定使用的镜像、端口映射、环境变量等信息。并包含以下属性

  image
  指定服务所使用的Docker镜像。

  image: redis
  image: redis:5
  image: redis@sha256:0ed5d5928d4737458944eb604cc8509e245c3e19d02ad83935398bc4b991aac7
  image: library/redis
  image: docker.io/library/redis
  image: my_private.registry:5000/redis
