(1)
purtus+registry搭建私有镜像库，给出具体步骤

要搭建一个私有镜像库，结合使用Portus和Docker Registry，您可以按照以下具体步骤进行操作：

1. 准备服务器：首先，您需要准备一台运行Docker的服务器。确保服务器上已经安装了Docker和Docker Compose。

2. 创建配置文件：在服务器上创建一个目录，并在该目录中创建一个名为`config.yml`的配置文件。您可以使用以下示例作为起点：

   ```yaml
   version: 2
   production:
     secret_key_base: your_secret_key
     database:
       adapter: mysql2
       encoding: utf8
       pool: 10
       database: portus
       username: portus
       password: your_mysql_password
       host: db
       socket: /var/run/mysqld/mysqld.sock
     mailer:
       from: portus@example.com
       reply_to: no-reply@example.com
       host: smtp.example.com
       port: 587
       user_name: smtp_username
       password: smtp_password
       authentication: plain
       starttls_auto: true
   ```

   请根据您的环境和需求进行必要的配置更改。确保设置了适当的数据库连接信息、邮件设置等。

3. 创建Docker Compose文件：在服务器上创建一个名为`docker-compose.yml`的文件，并使用以下内容填充：

   ```yaml
   version: '3'
   services:
     portus:
       image: opensuse/portus:2.5
       ports:
         - 3000:3000
       volumes:
         - ./config.yml:/srv/Portus/config/config.yml
       environment:
         - PORTUS_CONFIG=/srv/Portus/config/config.yml
     registry:
       image: registry:2
       ports:
         - 5000:5000
       volumes:
         - ./registry:/var/lib/registry
   ```

   请确保将`./config.yml`替换为您在第2步中创建的配置文件的路径。

4. 启动容器：使用以下命令启动Portus和Registry容器：

   ```shell
   docker-compose up -d
   ```

   这将启动Portus和Registry容器，并将它们分别绑定到主机的3000和5000端口。

5. 配置Portus：一旦容器启动成功，您可以使用浏览器访问Portus的Web界面。在浏览器中输入服务器的IP地址或域名，
后跟端口号3000（例如：http://your_server_ip:3000）。

   首次访问时，您需要进行管理员账户的创建。按照界面上的指示填写必要的信息来创建管理员账户。

6. 配置Docker客户端：在需要访问私有镜像库的机器上，配置Docker客户端以使用Registry。
您需要编辑Docker的配置文件（`/etc/docker/daemon.json`）并添加以下内容：

   ```json
   {
     "insecure-registries": ["your_server_ip:5000"]
   }
   ```

   将`your_server_ip`替换为运行Portus和Registry容器的服务器的IP地址。

7. 推送和拉取镜像：现在您可以使用Docker客户端推送和拉取镜像到私有镜像库了。首先，使用以下命令登录到私有镜像库：

   ```shell
   docker login your_server_ip:5000
   ```

   然后，您可以使用`docker push`命令将本地的镜像推送到私有镜像库，或使用`docker pull`命令从私有镜像库中拉取镜像。

这些步骤将帮助您搭建一个结合使用Portus和Docker Registry的私有镜像库。请确保您已经正确配置了数据库和邮件设置，
并根据需要进行其他定制和配置。

请注意，这只是基本的搭建过程，您可以根据需要进行更多的配置和定制。如果您需要更详细的指导，
请参考Portus和Docker Registry的官方文档。

希望这些步骤能帮助您成功搭建私有镜像库。如果您有任何其他问题，请随时提问。

(2)
上述的config.yml文件中的mailer部分的作用，可以去掉吗？

在Portus的配置文件`config.yml`中，`mailer`部分用于配置邮件相关的设置，包括发送邮件的服务器、端口、认证信息等。
这部分的作用是为Portus提供发送邮件的功能，例如发送密码重置链接、邀请用户等。

如果您不需要使用Portus发送邮件功能，可以将`mailer`部分从配置文件中删除或注释掉。这样做将禁用Portus的邮件功能
，但不会影响其他部分的正常运行。

以下是删除或注释`mailer`部分的示例配置文件：

```yaml
version: 2
production:
  secret_key_base: your_secret_key
  database:
    adapter: mysql2
    encoding: utf8
    pool: 10
    database: portus
    username: portus
    password: your_mysql_password
    host: db
    socket: /var/run/mysqld/mysqld.sock
# mailer:
#   from: portus@example.com
#   reply_to: no-reply@example.com
#   host: smtp.example.com
#   port: 587
#   user_name: smtp_username
#   password: smtp_password
#   authentication: plain
#   starttls_auto: true
```

请注意，如果您删除或注释掉`mailer`部分，某些功能（如密码重置和邀请用户）可能无法通过电子邮件进行操作。
如果您需要这些功能，您可以考虑配置有效的邮件设置。

总而言之，如果您不需要使用Portus发送邮件功能，可以删除或注释掉`config.yml`文件中的`mailer`部分。



(3)
遇到错误

Creating portus2_portus_1 ... error

ERROR: for portus2_portus_1  Cannot start service portus: OCI runtime create failed: container_linux.go:346: starting container process caused "exec: \"/init\": permission denied": unknown

ERROR: for portus  Cannot start service portus: OCI runtime create failed: container_linux.go:346: starting container process caused "exec: \"/init\": permission denied": unknown
ERROR: Encountered errors while bringing up the project.


