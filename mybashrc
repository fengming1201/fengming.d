#***************************************#
#author:fengming
#date:Thu 22 Dec 2022 11:22:52 AM CST
#***************************************#
fengming_top_dir=/etc/fengming.d
fengming_tools_dir=/etc/fengming.d/linux_tools
fengming_script_dir=/etc/fengming.d/scripts

alias ll='ls -hl --color=auto'
alias lll='ls -hl --color=auto'
alias llll='ls -hla --color=auto'
alias la='ls -aF --color=auto'
alias lf='ls -AF --color=auto'
alias l='ls -CF --color=auto'

alias bd=". bd -si"
alias treee='tree'
alias treeee='tree'
alias cman='man -M  /usr/share/man/zh_CN'
alias svnls='svn st | grep -v ^?'
alias svnst='svn st | grep -v ^?'
alias mywifi='fm-wifi_qr_code fjk myap 12345678'
alias clr='clear'

#source other files
except_do_source_list="env_variable"
for file in $(ls ${fengming_script_dir})
do
	for except in ${except_do_source_list}
	do
		if [ ${file} = ${except} ];then continue 1;fi
	done
	source ${fengming_script_dir}/${file}
done

if [ -f /opt/z/z.sh ];then
	source /opt/z/z.sh
fi

function clrall
{
	clear
	history -c
	echo "" > /${HOME}/.bash_history
	echo "All bash data has deleted!!"
	return 0
}


function fm-help_example
{
	local help_file_path=${fengming_top_dir}/help_files

	if [ $# -lt 1 ];then ls -lh ${help_file_path};return 0;fi
	if [ $1 = "-h" ] || [ $1 = "--help" ]
	then
		echo "${FUNCNAME}  cmd"
		echo "example:"
		echo "${FUNCNAME}  ip"
	fi
	local parameter=$@
	local help_file="none"
	for file_list in ${parameter}
	do
		help_file=$(find ${help_file_path} -type f -iname "${file_list}*")
		if [ "x${help_file}" = x ]
		then 
			echo "no found help file with prefix ${file_list}"
			
			local maybe_file=$(find ${help_file_path} -type f -iname "*${file_list}*")
			if [ "x${maybe_file}" != x ]
			then
				echo "maybe you looking for: "
				echo "${maybe_file}"
			fi
			return 2
		fi
		for file_each in ${help_file}
		do
			echo "file:${file_each}"
			echo ""
			cat ${file_each}
		done
	done
	return 0
}

function fm-document_list
{
	local doc_file_path=${fengming_top_dir}/documents
	
	if [ $# -lt 1 ];then ls -lh ${doc_file_path};return 0;fi

	if [ $1 = "-h" ] || [ $1 = "--help" ]
	then
		echo "${FUNCNAME}  file_prefix"
		echo "example:"
		echo "${FUNCNAME}  linux_use"
	fi
	local parameter=$@
	local doc_file="none"
	for file in ${parameter}
	do
		doc_file=$(find ${doc_file_path} -type f -iname "${file}*")
		if [ "x${doc_file}" = x ];then echo "no found ${file} help file";return 2;fi
		for file_each in ${doc_file}
		do
			echo "file:${file_each}"
			echo ""
			cat ${file_each}
		done
	done
	return 0
}

function fm-base_software_list
{
	local app_list=${fengming_top_dir}/linux_tools/base_software_list

	if [ ! -f ${app_list} ];then echo "${app_list} not exist.";return 1;fi

	cat ${app_list}

	return 0
}


function fm-install_mytools
{

	return 0
}

function fm-convert_linux_windows_path
{
	if [ $# -ne 1  ]
	then
		echo "ERROR:parameter wrong!!"
		echo "e.p:"
		echo "$0  /root/test.txt    --> \\root\\test.txt"
		echo "$0 'D:\\root\\test.txt' --> /root/test.txt"
		return 1
	fi

	local org_path=$1
	local tmp=$(echo $org_path  | grep / )
	local islinux_path=
	if [ "x$tmp" = x  ]
	then
		islinux_path=no
	else
		islinux_path=yes
	fi
	
	local new_path=
	if [ $islinux_path = yes  ]
	then
		new_path=$(echo $org_path | sed 's#/#\\#g')
	else
		new_path=$(echo $1 | sed -e 's#^[A-Z]:##' -e 's#\\#/#g')
	fi

	echo $new_path
	return 0
}

function fm-pwd
{
	local linux_pwd=${PWD}
	local win_pwd=$(echo ${linux_pwd} | sed 's#/#\\#g')

	echo "linux   --- ${linux_pwd}"
	echo "windows --- ${win_pwd}"
	return 0
}

function fm-realpath
{
	if [ $# -lt 1  ];then echo "ERROR:parmeter missing",echo "$FUNCNAME file/dir";return 1;fi
	local tool=realpath
	which ${tool} > /dev/null
	if [ $? -ne 0  ];then echo "ERROR:${tool} no found!!";return 2;fi
	for path in $*
	do
		local linux_path=$(${tool} ${path})
		if [ x"${linux_path}" != "x"  ]
		then
			echo "linux   --- ${linux_path}"
		fi
	done
	for path in $*
	do
		local linux_path=$(${tool} ${path})
		if [ x"${linux_path}" != "x"  ]
		then
			local win_path=$(echo ${linux_path} | sed 's#/#\\#g')
			echo "windows --- ${win_path}" 
		fi
	done
	return 0
}

function fm-find
{

	return 0

}

function fm-time_zone_update
{
	local app=ntpdate
	local zonefile=/usr/share/zoneinfo/Asia/Shanghai
	local target_file=/etc/localtime 

	which ${app} > /dev/null
	if [ $? -ne 0 ]
	then
		echo "ERROR:${FUNCNAME},${app} not found"
		echo "please install ${app}"
		echo "sudo apt install ${app}"
		return 1
	fi
	#copy zonefile
	if [ ! -f ${zonefile} ];then echo "ERROR:${FUNCNAME},${zonefile} not exist!";return 2;fi

	cp -vf ${zonefile} ${target_file}

	#update time from servers
	local time_server_array=("ntp.ntsc.ac.cn" "ntp1.aliyun.com" "ntp.fudan.edu.cn")
	for server in $(echo ${time_server_array[*]})
	do
		echo "try to connecting time server:${server}"
		ntpdate -u  ${server}
		if [ $? -eq 0 ]
		then
			break
		fi
	done
	
	return 0
}

function fm-download_whole_website
{
	local tool=wget
	which ${tool} > /dev/null
	if [ $? != 0 ];then echo "ERROR:${tool} not found!!";return 1;fi
	
	if [ $# -lt 1 ];then echo "ERROR:paramter missing!!";echo "$FUNCNAME URL";return 2;fi
	
	echo "${tool} -r -p -np -k $*"
	${tool} -r -p -np -k $*

	return 0
}

