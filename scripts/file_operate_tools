#***************************************#
#author:fengming
#date:Tue 10 Jan 2023 04:56:27 PM CST
#***************************************#
function fm-pdf_grep
{
	local app=pdfgrep
	local default_opt="--cache -iHnr "
    which ${app} > /dev/null
	if [ $? -ne 0 ] ; then echo ¨ERROR:${FUNCNAME},${app} not exist!¨;return 1;fi;
	
	$app ${default_opt} $*

	return 0
}

function fm-pdf_crack_passwd
{
	local app=pdfcrack
	local default_opt=
	which ${app} > /dev/null
	if [ $? -ne 0 ];then echo ¨ERROR:${FUNCNAME},${app} not exist!¨;return 1;fi;

	$app ${default_opt} $*
	return 0
}

function fm-pdf_tk
{
	local app=pdftk
	local default_opt=
	which ${app} > /dev/null
	if [ $? -ne 0 ];then echo ¨ERROR:${FUNCNAME},${app} not exist!¨;return 1;fi;

	$app ${default_opt} $*
	return 0
}

function fm-grep_aviv
{ 
    local app=grep
    local default_opt="-rin --exclude=*.torrent"
    
	#check parameter
    if [ $# -ne 1 ] || [ $1 = "-h" ] || [ $1 = "--help" ]
    then
        echo "DESCRIPTION:"
        echo "SYNOPSIS:"
        echo "         ${FUNCNAME}  key-word"
        return 1
    fi	
	#check exec file state
    which ${app} > /dev/null
    if [ $? -ne 0 ]; then
        echo "ERROR:${FUNCNAME},${app} not exist!"
        return 2
    fi
	local tmp_file=$(mktemp)
    find > ${tmp_file}
    $app ${default_opt} $*
    $app -in $* ${tmp_file}
    rm ${tmp_file}

    return 0
}
function fm-tree_aviv
{
	local app=tree
	local default_opt="-sfh"

	${app}  ${default_opt} $*

	return 0
}

function fm-rm_overwrite
{
	local app=shred
	local default_opt="-n 1 -u --random-source=/dev/urandom -v"

	#check parameter
    if [ $# -lt 1 ] || [ $1 = "-h" ] || [ $1 = "--help" ]
    then
        echo "DESCRIPTION:安全删除文件--先用随机数覆盖文件最后再删除该文件"
        echo "SYNOPSIS:"
        echo "         ${FUNCNAME}  [file or dir] list"	
        return 1
    fi

	which ${app} > /dev/null
	if [ $? -ne 0 ];then echo ¨ERROR:${FUNCNAME},${app} not exist!¨;return 1;fi;

	local total_file_num=
	local num=
	let total_file_num=0
	let num=0
	for param in "$@"
	do
		if [ -d ${param} ]
		then
			#first remove files under this dir
			let num=0
			for file in $(find ${param} -type f)
			do
				$app ${default_opt} ${file}
				let num=${num}+1
			done
			let total_file_num=${total_file_num}+${num}
			#final remove dir
			rm -rf ${param}
		else
			$app ${default_opt} ${param}
			let total_file_num=${total_file_num}+1
		fi
	done

	echo "total erase file counts:${total_file_num}"
	return 0
}






