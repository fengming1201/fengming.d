
{
    将内容发送到另一个终端窗口显示

    程序员在他们的计算机上使用多个物理屏幕来同时进行多项开发活动。一些程序员在这些屏幕上打开多个终端窗口。
    同时，一些程序员通常在同一个物理屏幕上使用多个终端窗口。如果我们需要将特定命令的输出发送到另一个现有的终端窗口怎么办？
    原理：
    每个GUI终端程序实例都连接到一个称为伪终端文件的设备文件。这些伪终端文件帮助GUI终端从子进程发送和捕获I/O数据。
    打开终端窗口并输入以下命令以查看所有可用的伪终端设备：

    已经打开了8个终端，如下：
    # ls /dev/pts/
    0  1  2  3  4  5  6  7  ptmx

    当前终端使用/dev/pts/0文件处理进程的I/O数据——您可以使用tty命令来查看当前的伪终端号。
    # tty
    /dev/pts/7

    使用这个实验概念，现在您可以将命令输出直接发送到另一个现有终端窗口，反之亦然，如下所示。
    #echo "hello world"  > /dev/pts/0
    向0号终端发送“hello world” 
    结合tee命令，即可以在本地显示，又可以发送到其他终端。
}
{
linux下神奇的script命令-录屏
    script 是一个神奇命令，script 能够将终端的会话过程录制下来，然后使用 scriptreplay 就可以将其录制的结果播放给他人观看。
    script 的好处就在于你在终端中的所有操作、敲过的命令和打印出的结果它都可以原原本本地进行录制。可以应用于教学、演示、审计。 
    一般来说，script 和 scriptreplay 在 Linux 发行版中都有默认安装。 
    #script -t 2>demo.time -a demo.his  //开始录像，ctrl+d或者exit结束 
    #scriptreplay demo.time demo.his    //回放 
    
    两个配置文件被当做script命令的参数。这两个文件可以随便命名，这里用demo.time和demo.his。
    其中
    demo.time用于存储时序信息，描述每一个指令在何时运行；
    demo.his用于存储命令信息输出。
    -t 选项用于将时序数据导入stderr。
    2>用于stderr重定向到demo.time。 
    参数:
    -t 指明输出录制的时间数据 
    -f 如果需要在输出到日志文件的同时，也可以查看日志文件的内容，可以使用 -f 参数。
    PS:可以用于教学,两个命令行接-f可以实时演示 
    -a 输出录制的文件，在现有内容上追加新的内容 
    -q  可以使script命令以静默模式运行  利用script记录某人行为 

}
{
使用reptyr在screen中接管执行中进程
    当你开启了一个占用很长时间的进程，比如wget一个大文件，但是没有在screen等这种环境里打开，
    又不想占着一个窗口一直等待或者担心ssh中断导致进程退出，就可以使用reptyr了，使用方法也很简单，
    开启一个screen，在screen中执行

    reptyr 进程pid    //即可完成接管，原来所在的终端程序变成后台，还可以重新接管回去。
}
