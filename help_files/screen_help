快捷键：
ctrl + a  ?     : 显示

Ctrl + a  w     : 展示当前会话中的所有窗口
Ctrl + a  c     : 创建新窗口
Ctrl + a  n     : 切换至下一个窗口
Ctrl + a  p     : 切换至上一个窗口
Ctrl + a  num   : 切换至编号为num的窗口
Ctrl + a  k     : 杀死当前窗口

screen -ls  : 查看当前已有的screen会话.

screen -S your_screen_name -X quit  : 删除某个会话.

Use: screen [-opts] [cmd [args]]
or: screen -r [host.tty]

Options:
-4            仅将主机名解析为IPv4地址.
-6            仅将主机名解析为IPv6地址.
-a            强制所有功能进入每个窗口的期限上限.
-A -[r|R]     使所有窗口适应新的显示宽度和高度.
-c file       读取配置文件，而不是“.screenrc”.
-d (-r)       分离其他运行屏幕（并在此处重新连接）.
-dmS name     作为守护程序启动：以分离模式显示会话.
-D (-r)       分离并注销远程（并在此处重新连接）.
-D -RR        做任何需要的事情来获得屏幕会话.
-e xy         更改命令字符.
-f            流量控制开启, -fn = off, -fa = auto.
-h lines      设置滚动历史缓冲区的大小.
-i            当流量控制打开时，尽快中断输出。
-l            Login mode on (update /var/run/utmp), -ln = off.
-ls [match]   or
-list         什么都不做，只需列出我们的SockDir（关于可能的匹配）.
-L            打开输出日志记录.
-Logfile file 设置日志文件名.
-m            忽略$STY变量，创建一个新的屏幕会话.
-O            选择最佳输出，而不是精确的vt100仿真.
-p window     预先选择命名窗口（如果存在）.
-q            安静启动。如果不成功，则使用非零返回代码退出.
-Q            命令会将响应发送到查询进程的stdout.
-r [session]  重新连接到分离的屏幕进程.
-R            如果可能，请重新附加，否则启动新会话.
-s shell      要执行的Shell而不是$Shell.
-S sockname   将此会话命名为<pid>。sockname而不是<pid>.<tty>.<host>.
-t title      设置标题。（窗口名称）.
-T term       对于窗口，使用术语$term，而不是“屏幕”.
-U            告诉屏幕使用UTF-8编码.
-v            Print "Screen version 4.06.02 (GNU) 23-Oct-17".
-wipe [match] 什么都不做，只需清理SockDir（关于可能的匹配）.
-x            连接到未分离的屏幕。（多显示模式）.
-X            在指定的会话中作为屏幕命令执行＜cmd＞.
